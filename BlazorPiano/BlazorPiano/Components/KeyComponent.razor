@using Model
@inject PianoGateway Piano;

<span class="key" @onmousedown="Attack" @onmouseout="Release" @onmouseup="Release">@BuildKey()</span>

@code {
    [Parameter]
    public Note note { get; set; }
    [Parameter]
    public EventCallback<Note> PlayedNote { get; set; }
    [JSInvokable]
    private async Task PlayNote()
    {
        if (note.IsValid())
        {
            await Piano.PlayNote(BuildKey());
            await PlayedNote.InvokeAsync(note);
            // StateHasChanged();
        }
    }

    private async Task Attack()
    {
        await Piano.AttackNote(BuildKey());
        await PlayedNote.InvokeAsync(note);
    }

    private async Task Release()
    {
        await Piano.ReleaseNote(BuildKey());
    }

    private string BuildKey() => note.Name + note.Octave.Number;
}