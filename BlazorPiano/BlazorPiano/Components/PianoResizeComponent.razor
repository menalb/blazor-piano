@using BlazorPiano.Services
@using static BlazorPiano.Services.BrowserResizeService
@inject IJSRuntime js;
@inject Services.BrowserResizeService BrowserResize;
@implements IDisposable

@*<div>
    <p><strong>Inner Height</strong> @InnerHeight</p>
    <p><strong>Inner Width</strong> @InnerWidth</p>
</div>*@

@code {
    [Parameter]
    public EventCallback<Size> OnResize { get; set; }

    int InnerHeight = 0;
    int InnerWidth = 0;

    protected override async Task OnInitializedAsync()
    {
        BrowserResize.Init(this);
        await RegisterResize();

        BrowserResize.OnResize += async (c, s) => await OnResize.InvokeAsync(s);
    }

    [JSInvokable]
    public void SetBrowserDimensions(int width, int height)
    {
        InnerWidth = width;
        InnerHeight = height;

        BrowserResize.Resize(width, height);
    }

    private async Task RegisterResize()
    {
        var dotNetReference = DotNetObjectReference.Create(this);
        await js.InvokeAsync<object>("browserResize.registerResizeCallback", dotNetReference);
    }

    public void Dispose()
    {
        BrowserResize.OnResize -= async (c, s) => await OnResize.InvokeAsync(s);
    }
}
