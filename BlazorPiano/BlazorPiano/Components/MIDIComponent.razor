@using Model
@inject IJSRuntime JS;
@inject PianoGateway Piano;

<button type="button" class="btn btn-secondary" @onclick="Init">MIDI</button>
@if (!string.IsNullOrEmpty(controllerName))
{

    <span class="midi-info">
        <b>MIDI:</b>
        <span title="midi name">
            @controllerName
        </span>
    </span>
}

@code {
    public string controllerName = "";
    private System.Text.StringBuilder notes = new System.Text.StringBuilder();
    [Parameter]
    public EventCallback<Note> PlayedNote { get; set; }

    [JSInvokable]
    private async Task Init()
    {
        var dotNetReference = DotNetObjectReference.Create(this);
        await JS.InvokeVoidAsync("PianoLib.initMidi", dotNetReference);
    }

    [JSInvokable("LogDevice")]
    public void LogDevice(string deviceName)
    {
        controllerName = deviceName;
        StateHasChanged();
    }

    [JSInvokable("PlayNote")]
    public async Task PlayNote(midiNote note)
    {
        await PlayedNote.InvokeAsync(new Note("", note.name, new Octave(note.octave)));
        StateHasChanged();
    }
    public record midiNote(string name, int octave);
}